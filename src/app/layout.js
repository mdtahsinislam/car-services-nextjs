


// // // import { Geist, Geist_Mono } from "next/font/google";
// // // import "./globals.css";
// // // import NavBar from "@/components/NavBar";

// // // const geistSans = Geist({
// // //   variable: "--font-geist-sans",
// // //   subsets: ["latin"],
// // // });

// // // const geistMono = Geist_Mono({
// // //   variable: "--font-geist-mono",
// // //   subsets: ["latin"],
// // // });

// // // export const metadata = {
// // //   title: "Create Next App",
// // //   description: "Generated by create next app",
// // // };

// // // // export default function RootLayout({ children }) {
// // // //   return (
// // // //     <html lang="en" data-theme="light">
// // // //       <body
// // // //         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
// // // //       >
// // // //         <NavBar />
// // // //         {children}
// // // //       </body>
// // // //     </html>
// // // //   );
// // // // }


// // // // export default function RootLayout({ children }) {
// // // //   return (
// // // //     <html lang="en" data-theme="light"> {/* default theme light */}
// // // //       <body className="antialiased">
// // // //         <NavBar />
// // // //         {children}
// // // //       </body>
// // // //     </html>
// // // //   );
// // // // }

// // // export default function RootLayout({ children }) {
// // //   return (
// // //     <html lang="en" data-theme="light">
// // //       <body className="antialiased">
// // //         <NavBar />
// // //         {children}
// // //       </body>
// // //     </html>
// // //   );
// // // }


// // "use client"; // This is crucial for using hooks like useState and useEffect

// // import { GeistSans } from "geist/font/sans";
// // import { GeistMono } from "geist/font/mono";
// // import "./globals.css";
// // import NavBar from "@/components/NavBar";
// // import { useState, useEffect, createContext, useContext } from "react";

// // // Create a context to share the theme state
// // const ThemeContext = createContext();

// // export const metadata = {
// //   title: "Create Next App",
// //   description: "Generated by create next app",
// // };

// // export default function RootLayout({ children }) {
// //   const [theme, setTheme] = useState("light"); // Initialize with "light"

// //   // Use useEffect to apply the theme and save it to localStorage
// //   useEffect(() => {
// //     const savedTheme = localStorage.getItem("theme") || "light";
// //     setTheme(savedTheme);
// //   }, []);

// //   useEffect(() => {
// //     document.documentElement.setAttribute("data-theme", theme);
// //     localStorage.setItem("theme", theme);
// //   }, [theme]);

// //   const toggleTheme = () => {
// //     setTheme((prevTheme) => (prevTheme === "light" ? "dark" : "light"));
// //   };

// //   return (
// //     <ThemeContext.Provider value={{ theme, toggleTheme }}>
// //       <html lang="en" data-theme={theme}>
// //         <body
// //           className={`${GeistSans.variable} ${GeistMono.variable} antialiased`}
// //         >
// //           <NavBar />
// //           {children}
// //         </body>
// //       </html>
// //     </ThemeContext.Provider>
// //   );
// // }

// // // Export the context hook for easy use in child components
// // export function useTheme() {
// //   return useContext(ThemeContext);
// // }

// // This part of the file is a Server Component by default.
// import { GeistSans } from "geist/font/sans";
// import { GeistMono } from "geist/font/mono";
// import "./globals.css";
// import NavBar from "@/components/NavBar";
// import ThemeProvider from "@/components/ThemeProvider"; // Import the new client component

// // This is the server-side metadata export
// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// // This is the main Server Component Layout
// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body className={`${GeistSans.variable} ${GeistMono.variable} antialiased`}>
//         {/*
//           Wrap your children with the client-side provider.
//           This is where you'll handle theme state and logic.
//         */}
//         <ThemeProvider>
//           <NavBar />
//           {children}
//         </ThemeProvider>
//       </body>
//     </html>
//   );
// }



// src/app/layout.jsx
import { GeistSans } from "geist/font/sans";
import { GeistMono } from "geist/font/mono";
import "./globals.css";
import NavBar from "@/components/NavBar";
import ThemeProvider from "@/components/ThemeProvider"; // Import the new provider
import Raff from "@/components/Raff";
import ServicesSection from "@/components/ServicesSection";
import { Toaster } from "react-hot-toast";
import Footer from "@/components/Footer";

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={`${GeistSans.variable} ${GeistMono.variable} antialiased`}>
        <ThemeProvider>
          <NavBar />
          {/* <Raff></Raff> */}
          {/* <ServicesSection></ServicesSection> */}
          {children}
           <Toaster position="top-center" reverseOrder={false} />
        </ThemeProvider>
        <Footer></Footer>
      </body>
    </html>
  );
}